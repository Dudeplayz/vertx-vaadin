# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      # test
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # TODO: does not work well with multimodule project
      #- run: mvn dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn -N install
      - run: mvn verify
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  deploy-vaadin8:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - run: mvn -Prelease,release-vaadin8 -pl :vertx-vaadin8 -am -DskipTests clean deploy
      - run: ./tools/build_v8_widgetsets.sh
  deploy-vaadin-flow:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - run: mvn -Prelease,release-flow -pl :vertx-vaadin-flow -DskipTests clean deploy


workflows:
  version: 2
  build-only:
    jobs:
      - build
  build-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-vaadin8:
          requires:
            - build
          filters:
            tags:
              only: /^v8-.*/
            branches:
              ignore: /.*/
      - deploy-vaadin-flow:
          requires:
            - build
          filters:
            tags:
              only: /^flow-.*/
            branches:
              ignore: /.*/

